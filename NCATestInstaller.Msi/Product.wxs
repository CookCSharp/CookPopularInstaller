<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
	 xmlns:bal="http://schemas.microsoft.com/wix/BalExtension"
	 xmlns:loc="http://schemas.microsoft.com/wix/2006/localization"
     xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">

  <?define UpgradeCode={374D7045-39C4-4922-B747-BE1493D414F6}?>
  <?define DependencyLibrariesDir=$(var.SolutionDir)Output\Package ?>
  <?define ExeProcessName=NCATestInstaller.Generate.exe ?>
  <?define Platform=x64 ?><!--与Package元素中的Platform属性值对应--> 
  <?if $(var.Platform)=x64 ?>
    <?define Win64="yes" ?>
    <?define PlatformProgramFilesFolder="ProgramFiles64Folder" ?>
  <?else ?>
    <?define Win64="no" ?>
    <?define PlatformProgramFilesFolder="ProgramFilesFolder" ?>
  <?endif ?>

  <!--
  |                     |Install|Uninstall|Change|Repair|Upgrade|
  |Installed            |False  |True     |True  |True  |True   |
  |REINSTALL            |False  |False    |False |True  |False  |
  |UPGRADINGPRODUCTCODE |False  |False    |False |False |True   |
  |REMOVE               |False  |True     |False |False |True   |
  -->

  <!--属性值-->
  <!--!(bind.property.ProductCode)、!(bind.FileVersion.App.exe)-->
  <!--{FB5896D4-D9AA-47C6-8F9E-FB7A16D867DE}-->
  
  <Product Id="*" UpgradeCode="$(var.UpgradeCode)" Language="1033" Codepage="936" 
           Name="!(loc.ProductName)" Version="1.0.0.2" Manufacturer="!(loc.Manufacturer)">
    <Package InstallerVersion="200" Compressed="yes" InstallScope="perMachine"
             Description="!(loc.Description)" Comments="!(loc.Comments)" Keywords="!(loc.ProductName)"
             Platform="$(var.Platform)" InstallPrivileges="elevated" AdminImage="yes" />

    <!--<Property Id="ALLUSERS" Secure="yes" Value="1" />-->
    <!--<Property Id="MSIUSEREALADMINDETECTION" Value="1" />
    <Condition Message="Installation requires Administrator privileges">
      <![CDATA[Privileged]]>
    </Condition>-->
    
    <!--<MajorUpgrade Schedule="afterInstallInitialize" AllowDowngrades="no" DowngradeErrorMessage="A later version of [ProductName] is already installed. Setup will now exit." />-->
    <MajorUpgrade Schedule="afterInstallInitialize" AllowDowngrades="yes" />    
    <!--<Upgrade Id="$(var.UpgradeCode)">
      <UpgradeVersion OnlyDetect="no" Property="PREVIOUSPRODUCT" Minimum="0.0.0.0" IncludeMinimum="yes" />
    </Upgrade>-->
    <Media Id="1" EmbedCab="yes" Cabinet="Product.cab"/>
    <!--<MediaTemplate EmbedCab="yes" CabinetTemplate="Product{0}.cab"/>-->
    <!--<Media Id="1" EmbedCab="yes" Cabinet="Product.cab" DiskPrompt="CD-ROM #1"/>-->
    <!--<Property Id="DiskPrompt" Value="NCATestInstaller Installation[1]"/>-->

    <!--<Property Id="MSIENFORCEUPGRADECOMPONENTRULES" Value="1"/>-->
    <!--<PropertyRef Id="NETFRAMEWORK35"/>
    <Condition Message="!(loc.DotnetFrameworkNeeded)">
      <![CDATA[Installed OR NETFRAMEWORK35]]>
    </Condition>
    <Condition Message="!(loc.AppNotSupported)">
      <![CDATA[Installed OR ((VersionNT >= 501 AND ServicePackLevel >= 2) OR (VersionNT >= 502))]]>
    </Condition>-->

    <!--<Upgrade Id="E839E546-BFC8-4A49-B002-CC9F4750E474">
      <UpgradeVersion OnlyDetect="yes" Minimum="!(bind.FileVersion.App.exe)" IncludeMinimum="no" Property="NEWER_VERSION_FOUND" />
      <UpgradeVersion Minimum="1.0.0.0" IncludeMinimum="yes" Maximum="!(bind.FileVersion.App.exe)" IncludeMaximum="no" Property="OLDER_VERSION_FOUND" />
    </Upgrade>

    <CustomAction Id="NewerVersionFound" Error="!(loc.SuperFormNewerVersionInstalled)" />
    <InstallExecuteSequence>
      <Custom Action="NewerVersionFound" After="FindRelatedProducts">
        <![CDATA[NEWER_VERSION_FOUND]]>
      </Custom>
      <RemoveExistingProducts After="InstallInitialize"/>
      <Custom Action="WixCloseApplications" Before="InstallInitialize" />
    </InstallExecuteSequence>
    <util:CloseApplication Id="CloseSuperForm" CloseMessage="no" Description="!(loc.MustCloseSuperForm)"
                           ElevatedCloseMessage="no" RebootPrompt="no" Target="$(var.ExeProcessName)"/>-->

    <Icon Id="App.ico" SourceFile="..\Assets\Images\NCATestInstaller.Generate.ico" />
    <Property Id="ARPPRODUCTICON" Value="App.ico" />
    <Icon Id="Uninstall.ico" SourceFile="..\Assets\Images\Uninstall.ico" />
    <!--<Property Id="REBOOT" Value="ReallySuppress/Force/Cancel"/>-->

    <Binary Id="CSharpCustomActions" SourceFile="$(var.NCATestInstaller.CSharpCustomAction.TargetDir)$(var.NCATestInstaller.CSharpCustomAction.TargetName).CA.dll"/>
    <CustomAction Id="SaveInstallDir" Property="ARPINSTALLLOCATION" Value="[INSTALLLOCATION]"/>
    <CustomAction Id="SetInstallMessage" BinaryKey="CSharpCustomActions" Execute="immediate" DllEntry="SetInstallMessageCustomAction" Return="check" Impersonate="yes"/>
    <CustomAction Id="Init" BinaryKey="CSharpCustomActions" Execute="immediate" DllEntry="InitCustomAction" Return="check" Impersonate="yes"/>
    <CustomAction Id="InstallDepends" BinaryKey="CSharpCustomActions" Execute="immediate" DllEntry="InstallDependsCustomAction" Return="check" Impersonate="yes"/>
    <CustomAction Id="UninstallApp" BinaryKey="CSharpCustomActions" Execute="immediate" DllEntry="UninstallCustomAction" Return="check" Impersonate="yes"/>

    <CustomAction Id="ThrowError" Error="Ends the installation!"/>
    <!--<CustomAction Id="TestVBScript" Script="vbscript" Execute="immediate">
      <![CDATA[
        msgbox Session.Property("PREVIOUSPRODUCT")
        msgbox Session.Property("CANCELREQUEST")="yes"
      ]]>
    </CustomAction>-->
    <CustomAction Id="SetCancelRequestHandlerProperties" Property="CancelRequestHandler"
                  Value="UpgradeCode=[UpgradeCode];ProductCode=[ProductCode];CancelRequest=[CANCELREQUEST];INSTALLFOLDER=[INSTALLFOLDER];UILevel=[UILevel];" />
    <CustomAction Id="CancelRequestHandler" BinaryKey="CSharpCustomActions" DllEntry="CancelRequestHandler" Return="check" Impersonate="yes" Execute="immediate" />
    
    <CustomAction Id="CheckPreviousVersion" BinaryKey="CSharpCustomActions" Execute="immediate" DllEntry="CheckPreviousVersionCustomAction" Return="check" />
    <CustomAction Id="RemoveCacheFolder" BinaryKey="CSharpCustomActions" Execute="immediate" DllEntry="RemoveCacheFolderCustomAction" Return="check" Impersonate="yes"/>
    <CustomAction Id="CSharpCustomActionDataCheck" Property="CustomActionData" 
                  Value="PRODUCTSTATE=[PRODUCTSTATE];PREVIOUSWIXBUNDLEPROVIDERKEY=[PREVIOUSWIXBUNDLEPROVIDERKEY];PACKAGECACHEPATH=[PACKAGECACHEPATH];INSTALLFOLDER=[INSTALLFOLDER];INSTALLDEPENDSMESSAGE=[INSTALLDEPENDSMESSAGE]" />
    <InstallExecuteSequence>
      <!--<RemoveExistingProducts After="InstallInitialize"/>-->
      <!--<ForceReboot After="InstallFinalize"></ForceReboot>-->
      <!--<ScheduleReboot After="InstallFinalize"></ScheduleReboot>-->
      <!--InstallValidate、InstallInitialize、InstallExecute、InstallExecuteAgain、InstallFinalize-->
      <!--如果希望自定义操作在卸载产品期间运行，但不在主要升级移除产品期间运行，请使用条件：REMOVE="ALL" AND UPGRADINGPRODUCTCODE-->
      <!--如果希望自定义操作仅在主要升级期间运行，请使用条件：UPGRADINGPRODUCTCODE-->
      <Custom Action="SaveInstallDir" After="InstallValidate" />
      <Custom Action="SetInstallMessage" After="InstallInitialize">
        NOT Installed AND NOT WIX_UPGRADE_DETECTED
      </Custom>
      <Custom Action="Init" Before="InstallExecute">
        NOT Installed OR REINSTALL
      </Custom>
      <Custom Action="InstallDepends" After="InstallFinalize">NOT REMOVE</Custom>
      <!--<Custom Action="InstallDepends" After="InstallFinalize">
        NOT Installed AND NOT WIX_UPGRADE_DETECTED
      </Custom>-->
      <!--<Custom Action="CSharpCustomActionDataCheck" Before="InstallInitialize">
        REMOVE="ALL" AND UPGRADINGPRODUCTCODE
      </Custom>-->
      <!--<Custom Action="UninstallApp" After="InstallInitialize">
        REMOVE="ALL" AND UPGRADINGPRODUCTCODE
      </Custom>-->
      <!--<Custom Action="CheckPreviousVersion" After="AppSearch">PREVIOUSPRODUCT</Custom>-->
      <!--<Custom Action="TestVBScript" After="InstallInitialize"/>-->
      <!--<Custom Action="SetCancelRequestHandlerProperties" After="InstallInitialize"></Custom>-->
      <!--<Custom Action="CancelRequestHandler" Before="InstallFinalize">1</Custom>-->
      <Custom Action="CancelRequestHandler" Before="InstallFinalize">CANCELREQUEST="yes"</Custom>
      <Custom Action="UninstallApp" After="InstallFinalize">REMOVE="ALL"</Custom>
    </InstallExecuteSequence>
    
    <WixVariable Id="WixUIBannerBmp" Value="Resources\top_banner.png" />
    <WixVariable Id="WixUIDialogBmp" Value="Resources\dialog_background.png" />
    <WixVariable Id="WixUILicenseRtf" Value="..\Assets\License.rtf" />

    <!--6种默认安装对话框-->
    <UI>
      <!--<UIRef Id="WixUI_Common" />-->
      <!--<UIRef Id="WixUI_Minimal"/>-->
      <UIRef Id="WixUI_InstallDir" />
      <Property Id="WIXUI_INSTALLDIR" Value="INSTALLFOLDER" />
      <!--<UIRef Id="WixUI_FeatureTree" />-->
      <!--<UIRef Id="WixUI_Mondo" />-->
      <!--<UIRef Id="WixUI_Advanced" />
	  <Property Id="ApplicationFolderName" Value="My Application Folder" />
	  <Property Id="WixAppFolder" Value="WixPerMachineFolder" />
	  <WixVariable Id="WixUISupportPerMachine" Value="1" />-->
      <!--<Property Id="WixAppFolder" Value="WixPerUserFolder" />
	  <WixVariable Id="WixUISupportPerUser" Value="0" />-->

      <Property Id="INSTALLDEPENDSMESSAGE" Value="正在初始化依赖环境，请稍后..." Secure="yes" />
      <ProgressText Action="InstallDepends">[INSTALLDEPENDSMESSAGE]</ProgressText>

      <!--触发启动App-->
      <Publish Dialog="ExitDialog" Control="Finish" Event="DoAction" Value="LaunchApplication">WIXUI_EXITDIALOGOPTIONALCHECKBOX = 1 and NOT Installed</Publish>

      <DialogRef Id="FilesInUse"/>
      <DialogRef Id="MsiRMFilesInUse"/>
      <UIRef Id="WixUI_ErrorProgressText" />
    </UI>
    <Property Id="WIXUI_EXITDIALOGOPTIONALTEXT" Value="Thank you for installing !(loc.ProductName)." />
    <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOXTEXT" Value="Launch !(loc.ProductName)" />

    <!--将App启动包含在Finish页面中-->
    <Property Id="WixShellExecTarget" Value="[#App.exe]"/>
    <CustomAction Id="LaunchApplication" BinaryKey="WixCA" DllEntry="WixShellExec" Impersonate="yes" />

    <Feature Id="ProductFeature" Title="!(loc.ProductName)" Level="1">
      <!--<ComponentRef Id="CustomFolder"/>-->
      <!--<ComponentGroupRef Id="ApplicationComponents" />-->
      <ComponentGroupRef Id="DependencyLibrariesGroup" />
      <ComponentGroupRef Id="EnvironmentComponents" />
      <ComponentGroupRef Id="RegistryComponents" />
      <ComponentRef Id="ApplicationDesktopComponent"/>
      <ComponentRef Id="ApplicationStartMenuComponent" />
      <!--<ComponentRef Id="ApplicationStartMenuUninstallComponent" />-->
    </Feature>
  </Product>

  <Fragment>
    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="$(var.PlatformProgramFilesFolder)">
        <Directory Id="Company" Name="!(loc.CompanyName)">
          <Directory Id="Product" Name="!(loc.ProductName)">
            <Directory Id="INSTALLFOLDER" Name="!(bind.property.ProductVersion)"/>
          </Directory>
        </Directory>
      </Directory>
      <Directory Id="DesktopFolder"/>
      <Directory Id="ProgramMenuFolder">
        <Directory Id="AppStartMenuFolder" Name="!(loc.ProductName)"/>
      </Directory>
    </Directory>
  </Fragment>

  <!--<Fragment>
    <DirectoryRef Id="INSTALLFOLDER">
      <Component Id="CustomFolder" Guid="C6D0FB30-6D8E-46B3-97DA-7CA76FCBE5D5" KeyPath="yes">
        <CreateFolder Directory="INSTALLFOLDER">
          <Permission User="SYSTEM" GenericAll="yes"/>
          <Permission User="EveryOne" GenericAll="yes" GenericRead="yes" Read="yes" ReadAttributes="yes" GenericExecute="yes" TakeOwnership="yes" GenericWrite="yes" WriteAttributes="yes" ReadPermission="yes" ChangePermission="yes"/>
          <Permission User="Users" Domain="[LOCAL_MACHINE_NAME]" GenericRead="yes" Read="yes" ReadAttributes="yes" GenericExecute="yes" TakeOwnership="yes" GenericWrite="yes" WriteAttributes="yes" ReadPermission="yes" ChangePermission="yes"/>
        </CreateFolder>
      </Component>
    </DirectoryRef>
  </Fragment>-->

  <!--<Fragment>
    <ComponentGroup Id="ApplicationComponents" Directory="INSTALLFOLDER">
      <Component Id="ApplicationComponent1" Guid="963B77C1-DC54-4FFD-931A-A7FD7AE7AD0F">
        <File Id="App.exe" Source="$(var.DependencyLibrariesDir)$(var.ExeProcessName)" KeyPath="yes"/>
      </Component>
      <Component Id="ApplicationComponent2" Guid="BD6FF6F5-A88E-44DC-9183-BD2B87C32E60">
        <File Id="App.config" Source="$(var.DependencyLibrariesDir)NCATest.ONES.ToolsManagement.dll.config" KeyPath="yes"/>
      </Component>
      <Component Id="ApplicationComponent3" Guid="FC5CFF91-0FE8-42F3-A9FF-3EA9B93F62E0">
        <File Id="App.json" Source="$(var.DependencyLibrariesDir)NCATest.ONES.ToolsManagement.runtimeconfig.json" KeyPath="yes"/>
      </Component>
      <Component Id="UninstallComponent" Guid="E0776B89-88B4-4E11-BE0F-13E7E0A3ED3F">
        <File Id="uninstall.exe" Source="C:\Windows\System32\msiexec.exe" KeyPath="yes"/>
      </Component>
    </ComponentGroup>
  </Fragment>-->

  <?include $(sys.CURRENTDIR)\Directory.wxi ?>

  <Fragment>
    <!--Environment-->
    <ComponentGroup Id="EnvironmentComponents" Directory="INSTALLFOLDER">
      <Component Id="RegistryTest" Guid="{74424180-F77E-40F7-B8D5-B362B8F23B10}" KeyPath="yes" Win64="$(var.Win64)">
        <Environment Id="RegistryTestEnvironment" Name="RegistryTest" Action="set" Permanent="no" System="yes" Part="last" Value="RegistryTest"/>
      </Component>
    </ComponentGroup>

    <!--Registry-->
    <ComponentGroup Id="RegistryComponents" Directory="INSTALLFOLDER">
      <!--<Component Id="RegistryTest" Guid="49EBED08-DCF2-45E8-AE29-17FAE00E5ABD">
        <RegistryKey Root="HKLM" Key="Software\!(loc.CompanyName)\!(loc.ProductName)" Action="createAndRemoveOnUninstall" ForceCreateOnInstall="no" ForceDeleteOnUninstall="no"/>
        <RegistryValue Root="HKLM" Key="Software\!(loc.CompanyName)\!(loc.ProductName)" Action="write" Name="InstallDir" Type="string" Value="[INSTALLFOLDER]" KeyPath="yes"/>
      </Component>-->
      <!--<Component Id="RegistryInstallLocationComponent" Guid="{C5C76C37-8704-468A-89E6-C5EC5C8B3B72}" Win64="$(var.Win64)">
        <RegistryValue Id="RegistryInstallLocationValue" Action="write"
                       Root="HKLM" Key="SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\[ProductCode]" 
                       Name="InstallLocation" Value="[INSTALLFOLDER]" Type="string" KeyPath="yes"/>
      </Component>-->
      <Component Id="RegistryDirectoryComponent" Guid="{42F85ADC-3D83-4BF8-A124-F2B25499E6BC}" Win64="$(var.Win64)">
        <RegistryValue Id="RegistryDirectoryValue" Action="write"
					   Root="HKLM" Key="Software\!(loc.CompanyName)\!(loc.ProductName)"
					   Name="Path" Value="[INSTALLFOLDER]" Type="string" KeyPath="yes"/>
      </Component>
      <Component Id="RegistryPathComponent" Guid="{03022617-682E-48DC-A4D3-73FF210A1A29}" Win64="$(var.Win64)">
        <RegistryValue Id="RegistryPathValue" Action="write"
					   Root="HKLM" Key="Software\!(loc.CompanyName)\!(loc.ProductName)"
					   Name="AppPath" Value="[#App.exe]" Type="string" KeyPath="yes"/>
      </Component>
      <Component Id="RegistryVersionComponent" Guid="{B40F2EA4-2EB1-49E2-A847-6A1ACBA908FF}" Win64="$(var.Win64)">
        <RegistryValue Id="RegistryVersionValue" Action="write"
                       Root="HKLM" Key="Software\!(loc.CompanyName)\!(loc.ProductName)"
                       Name="Version" Value="!(bind.FileVersion.App.exe)" Type="string" KeyPath="yes"/>
      </Component>
      <Component Id="RegistryProductCodeComponent" Guid="{9B3D3A9E-AB92-4BBA-8E8E-7DD7FF83EE01}" Win64="$(var.Win64)">
        <RegistryValue Id="RegistryProductCodeValue" Action="write"
                       Root="HKLM" Key="Software\!(loc.CompanyName)\!(loc.ProductName)"
                       Name="ProductCode" Value="!(bind.property.ProductCode)" Type="string" KeyPath="yes"/>
      </Component>
      <Component Id="RegistryWixBundleProviderKeyoComponent" Guid="{04A9A28D-2362-4F48-9ED5-3671CE1ECE05}" Win64="$(var.Win64)">
        <RegistryValue Id="RegistryWixBundleProviderKeyValue" Action="write"
                       Root="HKLM" Key="Software\!(loc.CompanyName)\!(loc.ProductName)"
                       Name="WixBundleProviderKey" Value="[WIXBUNDLEPROVIDERKEY]" Type="string" KeyPath="yes"/>
      </Component>
    </ComponentGroup>

    <!--Shortcut on Desktop-->
    <DirectoryRef Id="DesktopFolder">
      <Component Id="ApplicationDesktopComponent" Guid="{7CAB8CA9-88F1-4F20-ABD3-F2106EE8EA5F}" Win64="$(var.Win64)">
        <Shortcut Id="ApplicationDesktopShortcut" Name="!(loc.ProductName)"
                  Target="[#App.exe]" Icon="App.ico" WorkingDirectory="INSTALLFOLDER" Directory="DesktopFolder"/>
        <RemoveFolder Id="CleanUpDesktopShortcut" Directory="DesktopFolder" On="uninstall"/>
        <RegistryValue Root="HKCU" Key="Software\!(loc.CompanyName)\!(loc.ProductName)"
                       Name="DesktopShortcutInstalled" Value="1" Type="integer" KeyPath="yes"/>
      </Component>
    </DirectoryRef>

    <!--Shortcut in StartMenu-->
    <DirectoryRef Id="AppStartMenuFolder">
      <Component Id="ApplicationStartMenuComponent" Guid="{EC2E9967-7982-47B1-8F96-1217E7A2F52F}" Win64="$(var.Win64)">
        <Shortcut Id="ApplicationStartMenuShortcut" Name="!(loc.ProductName)" Description="!(loc.ProductName)"
                  Target="[#App.exe]" Icon="App.ico" WorkingDirectory="INSTALLFOLDER"/>
        <Shortcut Id="ApplicationStartMenuUninstallShortcut" Name="Uninstall !(loc.ProductName)" Description="Uninstall !(loc.ProductName)"
                  Target="[System64Folder]msiexec.exe" Arguments="/x [ProductCode]" Icon="Uninstall.ico"/>
        <RemoveFolder Id="CleanUpStartMenuShortCut" Directory="AppStartMenuFolder" On="uninstall"/>
        <RegistryValue Root="HKCU" Key="Software\!(loc.CompanyName)\!(loc.ProductName)"
                       Name="StartMenuShortcutInstalled" Type="integer" Value="1" KeyPath="yes"/>
      </Component>
    </DirectoryRef>
    <!--<DirectoryRef Id="AppStartMenuFolder">
      <Component Id="ApplicationStartMenuComponent" Guid="{E759017F-E9FC-44E7-B80D-A536AF604FE1}">
        <Shortcut Id="ApplicationStartMenuShortcut" Name="!(loc.ProductName)" Description="!(loc.ProductName)"
                  Target="[#App.exe]" Icon="App.ico" WorkingDirectory="INSTALLFOLDER"/>
        <RemoveFolder Id="CleanUpStartMenuShortCut1" Directory="AppStartMenuFolder" On="uninstall"/>
        <RegistryValue Root="HKCU" Key="Software\!(loc.CompanyName)\!(loc.ProductName)"
                       Name="StartMenuShortcutInstalled" Type="integer" Value="1" KeyPath="yes"/>
      </Component>
      <Component Id="ApplicationStartMenuUninstallComponent" Guid="{8BA18ECB-262B-4703-B2AF-45C93615BFA2}">
        <Shortcut Id="ApplicationStartMenuUninstallShortcut" Name="Uninstall !(loc.ProductName)" Description="Uninstall !(loc.ProductName)"
                  Target="[System64Folder]msiexec.exe" Arguments="/x [ProductCode]" Icon="Uninstall.ico"/>
        <RemoveFolder Id="CleanUpStartMenuShortCut2" Directory="AppStartMenuFolder" On="uninstall"/>
        <RegistryValue Root="HKCU" Key="Software\!(loc.CompanyName)\!(loc.ProductName)"
                       Name="StartMenuShortcutUninstalled" Type="integer" Value="1" KeyPath="yes"/>
      </Component>
    </DirectoryRef>-->
  </Fragment>

</Wix>