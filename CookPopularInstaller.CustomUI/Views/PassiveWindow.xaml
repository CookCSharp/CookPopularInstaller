<Window x:Class="CookPopularInstaller.CustomUI.Views.PassiveWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:CookPopularInstaller.CustomUI.Views"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:ui="https://github.cookpopularui/2021/xaml"
        xmlns:vm="clr-namespace:CookPopularInstaller.CustomUI.ViewModels"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type={x:Type vm:PassiveWindowViewModel}}"
        d:Style="{d:DynamicResource PassiveWindowStyle}"
        Title="{Binding Title}"
        Width="580"
        Height="160"
        Icon="{Binding WindowIcon}"
        WindowStartupLocation="CenterScreen"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Style="{DynamicResource PassiveWindowStyle}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/CookPopularUI.WPF;component/Themes/DefaultPopularColor.xaml" />
                <ResourceDictionary Source="/CookPopularInstaller.CustomUI;component/Assets/Themes/Default.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CookPopularUI.WPF;component/Themes/DefaultPopularControl.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="PassiveWindowStyle" TargetType="{x:Type Window}">
                <Setter Property="ResizeMode" Value="CanMinimize" />
                <Setter Property="WindowStyle" Value="None" />
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome CaptionHeight="30" GlassFrameThickness="{x:Static WindowChrome.GlassFrameCompleteThickness}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <AdornerDecorator>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{DynamicResource DefaultBackgroundBrush}"
                                        CornerRadius="5"
                                        Effect="{DynamicResource ShadowEffectDepth0}">
                                    <DockPanel>
                                        <DockPanel DockPanel.Dock="Top" Height="30">
                                            <StackPanel DockPanel.Dock="Left"
                                                        Margin="10,0,0,0"
                                                        VerticalAlignment="Center"
                                                        Orientation="Horizontal">
                                                <Image Width="16" Height="16"
                                                       Source="{TemplateBinding Icon}"
                                                       Stretch="Uniform" />
                                                <TextBlock Text="{TemplateBinding Title}"
                                                           Foreground="White"
                                                           FontSize="12"
                                                           Margin="6,0,0,0" />
                                            </StackPanel>
                                            <StackPanel HorizontalAlignment="Right"
                                                        Orientation="Horizontal" UseLayoutRounding="True" WindowChrome.IsHitTestVisibleInChrome="True">
                                                <Button Width="45"
                                                        Foreground="{DynamicResource ControlForegroundBrush}"
                                                        Background="Transparent"
                                                        Command="{x:Static SystemCommands.MinimizeWindowCommand}"
                                                        Style="{DynamicResource ButtonStyle}">
                                                    <Button.Content>
                                                        <Path Width="12" Height="12"
                                                              Data="{DynamicResource MinimizeGeometry}"
                                                              Fill="White"
                                                              Stretch="Uniform" />
                                                    </Button.Content>
                                                </Button>
                                                <Button Width="45"
                                                        Foreground="{DynamicResource ControlForegroundBrush}"
                                                        Background="Transparent"
                                                        Opacity="0.5"
                                                        Command="{x:Static SystemCommands.CloseWindowCommand}"
                                                        IsEnabled="False"
                                                        Style="{DynamicResource ButtonStyle}">
                                                    <Button.Content>
                                                        <Path Width="12" Height="12"
                                                              Data="{DynamicResource CloseGeometry}"
                                                              Fill="White"
                                                              Stretch="Uniform" />
                                                    </Button.Content>
                                                </Button>
                                            </StackPanel>
                                        </DockPanel>
                                        <ContentPresenter ClipToBounds="True" />
                                    </DockPanel>
                                </Border>
                            </AdornerDecorator>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Effect" Value="{x:Null}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <AdornerDecorator CacheMode="{DynamicResource DefaultBitmapCache}">
                                    <Border Name="RootBorder"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <ContentPresenter Content="{TemplateBinding Content}"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Border>
                                </AdornerDecorator>
                                <ui:Ripple ContentTemplate="{TemplateBinding ContentTemplate}"
                                           ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                           ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                           Padding="{TemplateBinding Padding}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           Focusable="False"
                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Feedback="White">
                                    <ui:Ripple.Clip>
                                        <MultiBinding Converter="{ui:BorderClipConverter}">
                                            <Binding ElementName="RootBorder" Path="ActualWidth" />
                                            <Binding ElementName="RootBorder" Path="ActualHeight" />
                                            <Binding ElementName="RootBorder" Path="CornerRadius" />
                                            <Binding ElementName="RootBorder" Path="BorderThickness" />
                                        </MultiBinding>
                                    </ui:Ripple.Clip>
                                </ui:Ripple>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#22F8F9FA" TargetName="RootBorder" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#33F8F9FA" TargetName="RootBorder" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <ProgressBar Height="22"
                 BorderThickness="0"
                 Foreground="Green"
                 Background="{DynamicResource UnEnabledBrush}"
                 Value="{Binding Progress}"
                 Minimum="0" Maximum="100"
                 Margin="30,0"
                 VerticalAlignment="Center"
                 ui:LinearProgressBarAssistant.TextColor="White" />

</Window>
